name: Build and Push Docker Image

on:
  push:
    branches: [ master, main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master, main ]

env:
  DOCKER_REPO: jcwangdocker/switch-service

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Get next version
      id: version
      run: |
        # 获取最新的tag版本
        git fetch --tags
        LATEST_TAG=$(git tag -l "v1.0.*" | sort -V | tail -n1)
        if [ -z "$LATEST_TAG" ]; then
          NEXT_VERSION="1.0.1"
        else
          # 提取版本号并递增
          PATCH_VERSION=$(echo $LATEST_TAG | sed 's/v1\.0\.//')
          NEXT_PATCH=$((PATCH_VERSION + 1))
          NEXT_VERSION="1.0.$NEXT_PATCH"
        fi
        echo "next_version=$NEXT_VERSION" >> $GITHUB_OUTPUT
        echo "Next version will be: $NEXT_VERSION"
        
    - name: Create and push tag
      if: github.event_name != 'pull_request' && github.ref == 'refs/heads/master'
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag -a "v${{ steps.version.outputs.next_version }}" -m "Auto-generated version v${{ steps.version.outputs.next_version }}"
        git push origin "v${{ steps.version.outputs.next_version }}"
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKER_REPO }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=${{ steps.version.outputs.next_version }},enable={{is_default_branch}}
          type=raw,value=v${{ steps.version.outputs.next_version }},enable={{is_default_branch}}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Image digest
      if: github.event_name != 'pull_request'
      run: echo ${{ steps.build.outputs.digest }} 