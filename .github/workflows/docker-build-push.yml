name: Build and Push Docker Image

on:
  push:
    branches: [ 'release_*' ]  # 只有release分支触发构建
    tags: [ 'v*' ]
  pull_request:
    branches: [ master, main ]

env:
  DOCKER_REPO: jcwangdocker/switch-service

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Get version from branch
      id: version
      run: |
        # 从分支名称提取版本号 (release_1.0.0 -> 1.0.0)
        BRANCH_NAME=${GITHUB_REF#refs/heads/}
        echo "Branch name: $BRANCH_NAME"
        
        if [[ $BRANCH_NAME =~ ^release_([0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
          VERSION=${BASH_REMATCH[1]}
          echo "Extracted version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        else
          echo "Error: Branch name does not match release_x.x.x pattern"
          exit 1
        fi
        
    - name: Create and push tag
      if: github.event_name != 'pull_request'
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
        # 检查标签是否已存在
        if git rev-parse "v${{ steps.version.outputs.version }}" >/dev/null 2>&1; then
          echo "Tag v${{ steps.version.outputs.version }} already exists, updating it"
          git tag -d "v${{ steps.version.outputs.version }}" || true
          git push origin ":refs/tags/v${{ steps.version.outputs.version }}" || true
        fi
        
        git tag -a "v${{ steps.version.outputs.version }}" -m "Release version v${{ steps.version.outputs.version }} from branch ${GITHUB_REF#refs/heads/}"
        git push origin "v${{ steps.version.outputs.version }}"
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKER_REPO }}
        tags: |
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=${{ steps.version.outputs.version }}
          type=raw,value=v${{ steps.version.outputs.version }}
          type=raw,value=latest,enable=${{ contains(github.ref, 'release_1.0.0') }}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Image digest
      if: github.event_name != 'pull_request'
      run: echo ${{ steps.build.outputs.digest }} 